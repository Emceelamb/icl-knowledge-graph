{"version":3,"sources":["Threedee.js","useData.js","useCSV.js","Twodee.js","TwodeePolling.js","ThreedeePolling.js","TwoNode.js","App.js","reportWebVitals.js","index.js"],"names":["Threedee","data","NUM","useState","setData","jsonUrl","join","useEffect","formattedData","nodes","links","json","then","d","Set","map","item","node","push","id","filter","e","length","source","target","value","console","log","useData","forceGraph","useRef","myScale","scaleLinear","domain","range","current","d3Force","strength","graphData","nodeLabel","linkLabel","nodeColor","linkWidth","linkOpacity","ref","onNodeDragEnd","fx","x","fy","y","fz","z","useCSV","dataURL","flatten","arr","reduce","flat","toFlatten","concat","Array","isArray","graph_data","datum","SYMBOL","row","Object","entries","entry","parsedCSV","a","csv","flat_data","csvURL","Twodee","linkDistScale","linkStrengthScale","distance","link","href","nodeCanvasObject","ctx","globalScale","label","fontSize","font","bckgDimensions","measureText","width","n","fillStyle","fillRect","textAlign","textBaseline","fillText","__bckgDimensions","nodePointerAreaPaint","color","TwodeePolling","getUniqueNodes","nodeList","parents","children","concattedArray","nd","fetchData","dataId","prevData","fetch","res","jsonData","new_nodes","new_links","b","filteredNodes","el","find","element","updateNo","timer","setInterval","clearInterval","ThreedeePolling","TwoNode","Nav","style","margin","className","to","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a7c26f4.chunk.js","sourcesContent":["import { ForceGraph3D, ForceGraph2D } from \"react-force-graph\";\n\nimport { useRef, useState, useEffect, useCallback, useMemo } from \"react\";\nimport { scaleLinear } from \"d3\";\nimport { useData } from \"./useData\";\n\nexport const Threedee = () => {\n  const data = useData(3);\n\n  const forceGraph = useRef(null);\n\n  const myScale = scaleLinear().domain([1, 10]).range([0, 3]);\n  const colorScale = scaleLinear().domain([1, 10]).range([\"#eff2f2\", \"red\"]);\n\n  useEffect(() => {\n    console.log(data);\n    if (!data) {\n      return <>Loading</>;\n    }\n    forceGraph.current.d3Force(\"charge\").strength(-500);\n  });\n  return (\n    <div>\n      {data ? (\n        <ForceGraph3D\n          graphData={data}\n          nodeLabel={(d) => d.id}\n          linkLabel={(d) => `Correlation value: ${d.value}`}\n          // linkCurvature={0.1}\n          nodeColor={(d) => (d.id[0] === \"$\" ? \"#19686b\" : \"yellow\")}\n          linkWidth={(d) => myScale(d.value)}\n          // linkCurveRotation={1}\n          linkOpacity={0.5}\n          // linkColor={(d) => colorScale(d.value)}\n          // forceEngine={'graph'}\n          ref={forceGraph}\n          onNodeDragEnd={(node) => {\n            node.fx = node.x;\n            node.fy = node.y;\n            node.fz = node.z;\n          }}\n        />\n      ) : (\n        <>Loading</>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { json } from \"d3\";\n\nexport const useData = (NUM) => {\n  const [data, setData] = useState(null);\n\n  const jsonUrl = [\n    \"https://gist.githubusercontent.com\",\n    \"Emceelamb\",\n    \"565435c5930849fa9ad1b75571ac5d07\",\n    \"raw\",\n    \"b2904e1d8019318a8fa494261460574731a42b27\", // commit string\n    `gme_correlation_${NUM}.json`,\n  ].join(\"/\");\n\n  useEffect(() => {\n    const formattedData = { nodes: [], links: [] };\n    json(jsonUrl)\n      .then((d) => {\n        const uniqueParent = [...new Set(d.map((item) => item[\"parent_node\"]))];\n        uniqueParent.map((node) => formattedData.nodes.push({ id: node }));\n\n        const uniqueChild = [...new Set(d.map((item) => item[\"child_node\"]))];\n        uniqueChild.map((node) => {\n          // console.log(formattedData.nodes.filter(e=>e.id===node), \"nodes\");\n          if (formattedData.nodes.filter((e) => e.id === node).length === 0) {\n            formattedData.nodes.push({ id: node });\n          }\n        });\n        //links: [{\"source\": 3, \"target\": 2, \"value\": \"aux\"}, ...]\n        // console.log(formattedData.nodes.filter((d) => d.id == \"automobiles\"));\n\n        d.map((item) => {\n          // const source = formattedData[\"nodes\"].findIndex(\n          //   (obj) => obj.value === item[\"parent_node\"]\n          // );\n          // const target = formattedData[\"nodes\"].findIndex(\n          //   (obj) => obj.value === item[\"child_node\"]\n          // );\n          // formattedData[\"links\"].push({source: source, target: target, value: item[\"score\"]})\n          formattedData[\"links\"].push({\n            source: item[\"parent_node\"],\n            target: item[\"child_node\"],\n            value: item[\"score\"],\n          });\n        });\n        console.log(formattedData);\n        return formattedData;\n      })\n      .then(setData);\n  }, []);\n\n  return data;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { csv, format } from \"d3\";\n\nexport const useCSV = (dataURL) => {\n\n  const [data, setData] = useState(null);\n\n  const formattedData = { nodes: [], links: [] };\n\n  const flatten = (arr) => {\n    return arr.reduce(function (flat, toFlatten) {\n      return flat.concat(\n        Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten\n      );\n    }, []);\n  };\n\n  const graph_data = (data) => {\n    return data.map((datum) => {\n      let source = datum.SYMBOL;\n      delete datum[\"SYMBOL\"];\n\n      let row = [];\n      for (const [key, value] of Object.entries(datum)) {\n        let entry = {\n          \"source\": source,\n          \"target\": key,\n          \"value\": +value,\n        };\n        row.push(entry);\n      }\n      return row;\n    });\n  };\n\n  useEffect(()=>{    \n    const formattedData = { nodes: [], links: [] };\n\n    const parsedCSV = async() => {\n      const data = await csv(dataURL)\n      const graphData = await graph_data(data);\n      const flat_data = await flatten(graphData);\n\n      const uniqueParent = [...new Set(flat_data.map((item) => item[\"source\"]))];\n      uniqueParent.map((node) => formattedData.nodes.push({ id: node }));\n\n      const uniqueChild = [...new Set(flat_data.map((item) => item[\"target\"]))];\n      uniqueChild.map((node) => {\n        // console.log(formattedData.nodes.filter(e=>e.id===node), \"nodes\");\n        if (formattedData.nodes.filter((e) => e.id === node).length === 0) {\n          formattedData.nodes.push({ id: node });\n        }\n      });\n      //links: [{\"source\": 3, \"target\": 2, \"value\": \"aux\"}, ...]\n      // console.log(formattedData.nodes.filter((d) => d.id == \"automobiles\"));\n\n      flat_data.map((item) => {\n        // const source = formattedData[\"nodes\"].findIndex(\n        //   (obj) => obj.value === item[\"parent_node\"]\n        // );\n        // const target = formattedData[\"nodes\"].findIndex(\n        //   (obj) => obj.value === item[\"child_node\"]\n        // );\n        // formattedData[\"links\"].push({source: source, target: target, value: item[\"score\"]})\n        formattedData[\"links\"].push({\n          source: item[\"source\"],\n          target: item[\"target\"],\n          value: item[\"value\"],\n        });\n      });\n      console.log(\"formatted: \", formattedData);\n\n      setData(formattedData)\n    }\n\n    parsedCSV()\n\n  }, [])\n  return data;\n};\n","import { ForceGraph2D } from \"react-force-graph\";\n\nimport { useRef, useState,  useEffect } from \"react\";\nimport { scaleLinear } from \"d3\";\n\n// import { useData } from \"./useData\";\nimport { useCSV } from \"./useCSV\";\n\nconst csvURL = [\n  'https://gist.githubusercontent.com',\n  'Emceelamb',\n  '184a627df887fc945d202c69333cb133',\n  'raw',\n  '016259ba32443fd673e01693b30f3f91920aed7c',\n  // 'transformers_2021-11-09.csv'   // AAPL STOCKS\n  'correlation_bert_2021-10-13_10_59_32.csv'  // BERT\n].join('/')\n\nexport const Twodee = () => {\n  const data = useCSV(csvURL);\n  // const data = useData(csvData);\n  \n  // const data = useData(csvData);\n  //const [data, setData] = useState(null);\n  const forceGraph = useRef(null);\n\n  const myScale = scaleLinear().domain([0, 1]).range([0, 20]);\n  const colorScale = scaleLinear().domain([1, 10]).range([\"#eff2f2\", \"red\"]);\n\n  const linkDistScale = scaleLinear().domain([1,0]).range([0, 1000]);\n  const linkStrengthScale = scaleLinear().domain([0,1]).range([0, 1]);\n\n  useEffect(() => {\n    if (!data) {\n      return <>Loading</>;\n    }\n    forceGraph.current.d3Force(\"charge\").strength(-500);\n    forceGraph.current.d3Force(\"link\")\n      .distance(link =>{return linkDistScale(link.value)})\n      .strength(link =>{console.log(link.value, linkStrengthScale(link.value)); return linkStrengthScale(link.value)})\n  });\n\n  // const demoData = useData(x);\n  // setData(demoData);\n  return (\n    <div>\n      <div>\n        <p>Dataset: <a href=\"https://gist.githubusercontent.com/Emceelamb/184a627df887fc945d202c69333cb133/raw/016259ba32443fd673e01693b30f3f91920aed7c/correlation_bert_2021-10-13_10_59_32.csv\">BERT</a></p>\n      </div>\n      {data ? (\n        <ForceGraph2D\n          graphData={data}\n          nodeLabel={(d) => d.id}\n          linkLabel={(d) =>{ console.log(d) ;return `${d.source.id} > ${d.target.id} <br>Correlation value: ${d.value}`}}\n          // linkCurvature={0.1}\n          nodeColor={(d) => (d.id[0] === \"$\" ? \"#19686b\" : \"yellow\")}\n          linkWidth={(d) => { console.log(d.value, myScale(d.value)); return myScale(d.value)}}\n          // linkCurveRotation={1}\n          linkOpacity={0.8}\n          // linkColor={(d) => colorScale(d.value)}\n          // forceEngine={'graph'}\n          ref={forceGraph}\n\n          nodeCanvasObject={(node, ctx, globalScale) => {\n            const label = node.id;\n            const fontSize = 16/globalScale;\n            ctx.font = `${fontSize}px Sans-Serif`;\n            const textWidth= ctx.measureText(label).width;\n            const bckgDimensions = [textWidth, fontSize].map(n=> n> fontSize * 0.2);\n\n            ctx.fillStyle = 'rgba(255, 255, 255, 0.8';\n            ctx.fillRect(node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] /2, ...bckgDimensions);\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = \"black\";\n            ctx.fillText(label, node.x, node.y);\n\n            node.__bckgDimensions = bckgDimensions;\n          }}\n\n          nodePointerAreaPaint={(node, color, ctx) => {\n            ctx.fillStyle = color;\n            const bckgDimensions = node.__bckgDimensions;\n            bckgDimensions && ctx.fillRect(node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] /2, ...bckgDimensions)\n          }}\n\n\n\n        />\n      ) : (\n        <>Loading</>\n      )}\n    </div>\n  );\n};\n","import { ForceGraph2D } from \"react-force-graph\";\n\nimport { useRef, useState, useEffect, useCallback, useMemo } from \"react\";\nimport { scaleLinear } from \"d3\";\n\nimport { useData } from \"./useData\";\n\nexport const TwodeePolling = () => {\n  const [data, setData] = useState({ nodes: [], links: [] });\n  const [dataLoad, setDataLoad] = useState(false);\n  const [datasetID, setDatasetID] = useState(2);\n\n  const forceGraph = useRef(null);\n\n  const myScale = scaleLinear().domain([1, 10]).range([0, 3]);\n  const colorScale = scaleLinear().domain([1, 10]).range([\"#eff2f2\", \"red\"]);\n\n  const getUniqueNodes = (nodeList) => {\n    let parents = [...new Set(nodeList.map((node) => node[\"parent_node\"]))];\n    let children = [...new Set(nodeList.map((node) => node[\"child_node\"]))];\n    let concattedArray = parents.concat(children);\n    let unique = [...new Set(concattedArray)];\n    return unique.map((nd) => {\n      return { id: nd };\n    });\n  };\n\n  const filterById = (a, b) => {\n    let res = [];\n    res = a.filter((el) => {\n      return !b.find((element) => {\n        return element.id === el.id;\n      });\n    });\n    return res;\n  };\n\n  const getLinks = (nodeList) => {\n    return nodeList.map((nd) => {\n      return {\n        source: nd[\"parent_node\"],\n        target: nd[\"child_node\"],\n        value: nd[\"score\"],\n      };\n    });\n  };\n\n  const fetchData = async (dataId, prevData) => {\n    console.log(\"fetch data\", dataId);\n    const jsonUrl = [\n      \"https://gist.githubusercontent.com\",\n      \"Emceelamb\",\n      \"565435c5930849fa9ad1b75571ac5d07\",\n      \"raw\",\n      \"b2904e1d8019318a8fa494261460574731a42b27\", // commit string\n      `gme_correlation_${dataId}.json`,\n    ].join(\"/\");\n\n    const res = await fetch(jsonUrl);\n    const jsonData = await res.json();\n\n    const new_nodes = getUniqueNodes(jsonData);\n\n    const new_links = getLinks(jsonData);\n    console.log(data);\n    setData(({ nodes, links }) => {\n      const filteredNodes = filterById(new_nodes, [...nodes]);\n      return {\n        nodes: [...nodes, ...filteredNodes],\n        links: [...links, ...new_links],\n      };\n    });\n  };\n\n  useEffect(() => {\n    if (data[\"nodes\"].length < 1) {\n      console.log(\"not loaded\");\n      return <>Loading</>;\n    }\n    forceGraph.current.d3Force(\"charge\").strength(-500);\n  });\n\n  let updateNo = 1;\n\n  useEffect(() => {\n    console.log(data, \"data refresh\");\n  }, [data]);\n\n  useEffect(() => {\n    // getData(updateNo, data);\n    // fetchData(2);\n    fetchData(updateNo);\n    const timer = setInterval(() => {\n      if (updateNo > 6) {\n        clearInterval(timer);\n      }\n      fetchData(updateNo);\n      updateNo > 8 ? (updateNo = 1) : updateNo++;\n    }, 2000);\n    return () => clearInterval(timer);\n  }, []);\n\n  // const demoData = useData(x);\n  // setData(demoData);\n  return (\n    <div>\n      {data ? (\n        <ForceGraph2D\n          graphData={data}\n          nodeLabel={(d) => {\n            console.log(d, d.id);\n            return d.id;\n          }}\n          linkLabel={(d) => `Correlation value: ${d.value}`}\n          // linkCurvature={0.1}\n          nodeColor={(d) => (d.id[0] === \"$\" ? \"#19686b\" : \"yellow\")}\n          linkWidth={(d) => myScale(d.value)}\n          // linkCurveRotation={1}\n          linkOpacity={0.5}\n          // linkColor={(d) => colorScale(d.value)}\n          // forceEngine={'graph'}\n          ref={forceGraph}\n          onNodeDragEnd={(node) => {\n            node.fx = node.x;\n            node.fy = node.y;\n          }}\n        />\n      ) : (\n        <>Loading...</>\n      )}\n    </div>\n  );\n};\n","import { ForceGraph3D } from \"react-force-graph\";\n\nimport { useRef, useState, useEffect, useCallback, useMemo } from \"react\";\nimport { scaleLinear } from \"d3\";\n\nimport { useData } from \"./useData\";\n\nexport const ThreedeePolling = () => {\n  const [data, setData] = useState({ nodes: [], links: [] });\n  const [dataLoad, setDataLoad] = useState(false);\n  const [datasetID, setDatasetID] = useState(2);\n\n  const forceGraph = useRef(null);\n\n  const myScale = scaleLinear().domain([1, 10]).range([0, 3]);\n  const colorScale = scaleLinear().domain([1, 10]).range([\"#eff2f2\", \"red\"]);\n\n  const getUniqueNodes = (nodeList) => {\n    let parents = [...new Set(nodeList.map((node) => node[\"parent_node\"]))];\n    let children = [...new Set(nodeList.map((node) => node[\"child_node\"]))];\n    let concattedArray = parents.concat(children);\n    let unique = [...new Set(concattedArray)];\n    return unique.map((nd) => {\n      return { id: nd };\n    });\n  };\n\n  const filterById = (a, b) => {\n    let res = [];\n    res = a.filter((el) => {\n      return !b.find((element) => {\n        return element.id === el.id;\n      });\n    });\n    return res;\n  };\n\n  const getLinks = (nodeList) => {\n    return nodeList.map((nd) => {\n      return {\n        source: nd[\"parent_node\"],\n        target: nd[\"child_node\"],\n        value: nd[\"score\"],\n      };\n    });\n  };\n\n  const fetchData = async (dataId, prevData) => {\n    console.log(\"fetch data\", dataId);\n    const jsonUrl = [\n      \"https://gist.githubusercontent.com\",\n      \"Emceelamb\",\n      \"565435c5930849fa9ad1b75571ac5d07\",\n      \"raw\",\n      \"b2904e1d8019318a8fa494261460574731a42b27\", // commit string\n      `gme_correlation_${dataId}.json`,\n    ].join(\"/\");\n\n    const res = await fetch(jsonUrl);\n    const jsonData = await res.json();\n\n    const new_nodes = getUniqueNodes(jsonData);\n\n    const new_links = getLinks(jsonData);\n    console.log(data);\n    setData(({ nodes, links }) => {\n      const filteredNodes = filterById(new_nodes, [...nodes]);\n      return {\n        nodes: [...nodes, ...filteredNodes],\n        links: [...links, ...new_links],\n      };\n    });\n  };\n\n  useEffect(() => {\n    if (data[\"nodes\"].length < 1) {\n      console.log(\"not loaded\");\n      return <>Loading</>;\n    }\n    forceGraph.current.d3Force(\"charge\").strength(-500);\n  });\n\n  let updateNo = 1;\n\n  useEffect(() => {\n    console.log(data, \"data refresh\");\n  }, [data]);\n\n  useEffect(() => {\n    // getData(updateNo, data);\n    // fetchData(2);\n    fetchData(updateNo);\n    const timer = setInterval(() => {\n      if (updateNo > 6) {\n        clearInterval(timer);\n      }\n      fetchData(updateNo);\n      updateNo > 8 ? (updateNo = 1) : updateNo++;\n    }, 2000);\n    return () => clearInterval(timer);\n  }, []);\n\n  // const demoData = useData(x);\n  // setData(demoData);\n  return (\n    <div>\n      {data ? (\n        <ForceGraph3D\n          graphData={data}\n          nodeLabel={(d) => {\n            console.log(d, d.id);\n            return d.id;\n          }}\n          linkLabel={(d) => `Correlation value: ${d.value}`}\n          // linkCurvature={0.1}\n          nodeColor={(d) => (d.id[0] === \"$\" ? \"#19686b\" : \"yellow\")}\n          linkWidth={(d) => myScale(d.value)}\n          // linkCurveRotation={1}\n          linkOpacity={0.5}\n          // linkColor={(d) => colorScale(d.value)}\n          // forceEngine={'graph'}\n          ref={forceGraph}\n          onNodeDragEnd={(node) => {\n            node.fx = node.x;\n            node.fy = node.y;\n          }}\n        />\n      ) : (\n        <>Loading...</>\n      )}\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useCSV } from './useCSV';\n\nexport const TwoNode = () => {\n\n  const dataURL = [\n    'https://gist.githubusercontent.com',\n    'Emceelamb',\n    '184a627df887fc945d202c69333cb133',\n    'raw',\n    '016259ba32443fd673e01693b30f3f91920aed7c',\n    //'transformers_2021-11-09.csv'   // AAPL STOCKS\n    'correlation_bert_2021-10-13_10_59_32.csv'  // BERT\n  ].join('/')\n\n\n  const data = useCSV(dataURL)\n\n  useEffect(()=>{\n    if(!data){\n      return <>Loading...</>\n\n    }\n      console.log(data)\n  })\n\n\n  return (\n    <>\n      <p>hello</p>\n    </>\n  )\n} ","import \"./App.css\";\nimport {\n  // BrowserRouter as Router,\n  Routes,\n  Route,\n  withRouter,\n  HashRouter as Router,\n  Link,\n} from \"react-router-dom\";\n\nimport { Threedee } from \"./Threedee\";\nimport { Twodee } from \"./Twodee\";\nimport { TwodeePolling } from \"./TwodeePolling\";\nimport { ThreedeePolling } from \"./ThreedeePolling\";\nimport { TwoNode } from \"./TwoNode\";\n\nconst Nav = () => {\n  return (\n    <div style={{ margin: \"auto\" }}>\n      <p>\n        Electric Vehicles Matrix:\n        <a href=\"https://gist.githubusercontent.com/Emceelamb/565435c5930849fa9ad1b75571ac5d07/raw/d54ed7b4fa0cd936d4c1e7b0164906f330145962/gme_correlation.json\">\n          data\n        </a>\n      </p>\n      <ul className=\"menu\">\n        <li>\n          <Link to=\"/two\">2D</Link>\n        </li>\n        <li>\n          <Link to=\"/three\">3D</Link>\n        </li>\n        <li>\n          <Link to=\"/polling\">2D polling</Link>\n        </li>\n        <li>\n          <Link to=\"/3dpolling\">3D polling</Link>\n        </li>\n        <li>\n          <Link to=\"/2node\">2Node</Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\nfunction App() {\n  return (\n    <>\n      <Router basename=\"\">\n        <Nav />\n        <Routes>\n          <Route exact path=\"\" element={<Threedee />} />\n          <Route exact path=\"/three\" element={<Threedee />} />\n          <Route exact path=\"/two\" element={<Twodee />} />\n          <Route exact path=\"/polling\" element={<TwodeePolling />} />\n          <Route exact path=\"/3dpolling\" element={<ThreedeePolling />} />\n          <Route exact path=\"/2node\" element={<TwoNode/>} />\n        </Routes>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}